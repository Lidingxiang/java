<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace命名空间，作用就是对sql进行分类化管理，即sql隔离
注意：使用mapper代理方法开发的话，namespace就有特殊重要的作用了,namespace=mapper接口地址
 -->
<mapper namespace="mybatis.mapper.UserMapper">

    <select id="findUserById" parameterType="int" resultType="user">
		select * from user where id = #{id}
	</select>

    <select id="findUserByName" parameterType="java.lang.String" resultType="mybatis.po.User">
		select * from user where username like '%${value}%'
	</select>

    <insert id="insertUser" parameterType="mybatis.po.User">
        insert into user(username,birthday,sex,address) values(#{username},#{birthday},#{sex},#{address})

        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            select last_insert_id()
        </selectKey>

    </insert>

    <delete id="deleteUser" parameterType="int">
		delete from user where id=#{id}
	</delete>

    <update id="updateUser" parameterType="mybatis.po.User">
		update user set username=#{username},birthday=#{birthday},sex=#{sex},address=#{address} where id=#{id}
	</update>

</mapper>